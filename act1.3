#include <iostream>
#include <vector>
#include <fstream>
#include <cstdlib>
#include <string>
#include <sstream>
using namespace std;

class registro {
protected:
    int Orden;
    string Mes;
    int Dia;
    int Hora;
    int Minuto;
    int Segundos;
    string IP;
    string Razon;
    int mesNumerico;

public:
    registro(int orden, string mes, int dia, int hora, int minuto, int segundos, string ip, string razon) {
        Orden = orden;
        Mes = mes;
        Dia = dia;
        Hora = hora;
        Minuto = minuto;
        Segundos = segundos;
        IP = ip;
        Razon = razon;
        cambioMes();
    }

    void cambioMes() {
        if (Mes == "Jan") mesNumerico = 1;
        else if (Mes == "Feb") mesNumerico = 2;
        else if (Mes == "Mar") mesNumerico = 3;
        else if (Mes == "Apr") mesNumerico = 4;
        else if (Mes == "May") mesNumerico = 5;
        else if (Mes == "Jun") mesNumerico = 6;
        else if (Mes == "Jul") mesNumerico = 7;
        else if (Mes == "Aug") mesNumerico = 8;
        else if (Mes == "Sep") mesNumerico = 9;
        else if (Mes == "Oct") mesNumerico = 10;
        else if (Mes == "Nov") mesNumerico = 11;
        else if (Mes == "Dec") mesNumerico = 12;
    }

    int getMesNumerico() const {
        return mesNumerico;
    }

    int getOrden() const {
        return Orden;
    }

    friend ostream& operator<<(ostream& os, const registro& reg) {
        os << reg.Mes << " " << reg.Dia << " " << reg.Hora << ":" << reg.Minuto << ":" << reg.Segundos << " "
            << reg.IP << " " << reg.Razon;
        return os;
    }
};

int cambio(int a, int b, vector<int>& fecha) {
    int desechable = fecha[a];
    fecha[a] = fecha[b];
    fecha[b] = desechable;
    return 0;
}

int cambio(int a, int b, vector<registro>& Registros) {
    registro desechable = Registros[a];
    Registros[a] = Registros[b];
    Registros[b] = desechable;
    return 0;
}

vector<int>& ordenaSeleccion(vector<int>& fechas, vector<registro>& Registros) {
    for (int i = 0; i < fechas.size() - 1; i++) {
        int menor = i;
        for (int j = i + 1; j < fechas.size(); j++) {
            if (fechas[j] < fechas[menor]) {
                menor = j;
            }
        }
        if (menor != i) {
            cambio(i, menor, fechas);
            cambio(i, menor, Registros);
        }
    }

    return fechas;
}

void buscarPorRango(const vector<registro>& Registros, int fechaInicio, int fechaFin) {

    cout << "Registros dentro del rango solicitado:" << endl;
    ofstream archivoSalida("registros_filtrados.txt");

    bool encontrado = false;

    for (const auto& reg : Registros) {
        if (reg.getOrden() >= fechaInicio && reg.getOrden() <= fechaFin) {
            cout << reg << endl;
            archivoSalida << reg << endl;
            encontrado = true;
        }
    }

    if (!encontrado) {
        cout << "No se encontraron registros en el rango especificado." << endl;
    }

    archivoSalida.close();
}

int convertirFechaUsuario(string mes, int dia, int hora, int minuto, int segundo) {
    string mesStr;
    if (mes == "Jan") mesStr = "01";
    else if (mes == "Feb") mesStr = "02";
    else if (mes == "Mar") mesStr = "03";
    else if (mes == "Apr") mesStr = "04";
    else if (mes == "May") mesStr = "05";
    else if (mes == "Jun") mesStr = "06";
    else if (mes == "Jul") mesStr = "07";
    else if (mes == "Aug") mesStr = "08";
    else if (mes == "Sep") mesStr = "09";
    else if (mes == "Oct") mesStr = "10";
    else if (mes == "Nov") mesStr = "11";
    else if (mes == "Dec") mesStr = "12";

    string diaStr = (dia < 10) ? "0" + to_string(dia) : to_string(dia);
    string horaStr = (hora < 10) ? "0" + to_string(hora) : to_string(hora);
    string minutoStr = (minuto < 10) ? "0" + to_string(minuto) : to_string(minuto);
    string segundoStr = (segundo < 10) ? "0" + to_string(segundo) : to_string(segundo);

    return stoi(mesStr + diaStr + horaStr + minutoStr + segundoStr);
}

int main() {
    int orden;
    string orden_str;
    string mes, linea;
    int dia;
    string dia_str;
    int hora;
    char separador1;
    int minuto;
    char separador2;
    int segundo;
    string ip;
    string razon;

    ifstream file1("bitacora.txt");

    vector<registro> Registros;
    vector<int> fechas;
    orden = 0;

    while (getline(file1, linea)) {
        stringstream ss(linea);
        ss >> mes >> dia >> hora >> separador1 >> minuto >> separador2 >> segundo >> ip;
        getline(ss, razon);

        orden_str = (mes == "Jan" ? "01" : mes == "Feb" ? "02" : mes == "Mar" ? "03" :
            mes == "Apr" ? "04" : mes == "May" ? "05" : mes == "Jun" ? "06" :
            mes == "Jul" ? "07" : mes == "Aug" ? "08" : mes == "Sep" ? "09" :
            mes == "Oct" ? "10" : mes == "Nov" ? "11" : "12");

        dia_str = (dia < 10) ? "0" + to_string(dia) : to_string(dia);
        orden_str += dia_str + (hora < 10 ? "0" + to_string(hora) : to_string(hora)) +
            (minuto < 10 ? "0" + to_string(minuto) : to_string(minuto)) +
            (segundo < 10 ? "0" + to_string(segundo) : to_string(segundo));

        fechas.push_back(stoi(orden_str));

        registro Registro(stoi(orden_str), mes, dia, hora, minuto, segundo, ip, razon);
        Registros.push_back(Registro);
    }

    ordenaSeleccion(fechas, Registros);

    string mesInicio, mesFin;
    int diaInicio, diaFin, horaInicio, horaFin, minutoInicio, minutoFin, segundoInicio, segundoFin;

    cout << "Ingrese la fecha de inicio (Mes Dia Hora Minuto Segundo) (ej. Sep 10 11 11 11): ";
    cin >> mesInicio >> diaInicio >> horaInicio >> minutoInicio >> segundoInicio;
    cout << "Ingrese la fecha de fin: ";
    cin >> mesFin >> diaFin >> horaFin >> minutoFin >> segundoFin;

    int fechaInicio = convertirFechaUsuario(mesInicio, diaInicio, horaInicio, minutoInicio, segundoInicio);
    int fechaFin = convertirFechaUsuario(mesFin, diaFin, horaFin, minutoFin, segundoFin);

    buscarPorRango(Registros, fechaInicio, fechaFin);

    return 0;
}
